name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache Build files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1.9.0
        with:
          mongodb-version: 4.4

      - uses: gradle/gradle-build-action@v3
        with:
          arguments: |
            :caroline-server:caroline-server-bundled:build
            :caroline-server:caroline-server-core:check
            :caroline-server:caroline-server-crash:check
            :caroline-server:caroline-server-functions:check
            :caroline-server:caroline-server-functions-runtime:check
            :caroline-server:caroline-server-internal:check
            :caroline-server:caroline-server-logging:check
            :caroline-server:caroline-server-projects:check
            :caroline-server:caroline-server-users:check

      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results-server
          path: '**/TEST-*.xml'

  test-sdk:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Cache Build files
        uses: actions/cache@v3
        if: ${{ !startsWith(matrix.os, 'windows') }}
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}
      #      - uses: eskatos/gradle-command-action@v1
      #        name: Test Windows Target
      #        if: ${{ startsWith(matrix.os, 'windows') }}
      #        with:
      #          arguments: win64Test
      #      - uses: eskatos/gradle-command-action@v1
      #        name: Test Apple Targets
      #        if: ${{ startsWith(matrix.os, 'macos') }}
      #        with:
      #          arguments: macosTest # iosTest tvosTest watchosX86Test
      - uses: gradle/gradle-build-action@v3
        name: Test Linux/Jvm/Js Targets
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        with:
          arguments: | #linuxX64Test
            jvmTest
            jsTest

      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results-sdk
          path: '**/TEST-*.xml'

  kover-report:
    runs-on: ubuntu-latest
    needs: [ test-server, test-sdk ]
    steps:
      - uses: actions/checkout@v4
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1.9.0
        with:
          mongodb-version: 4.4
      - uses: gradle/gradle-build-action@v3
        name: Generate Kover report
        with:
          arguments: koverXmlReport
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: "**/build/reports/kover/report.xml"

  upload-junit-results:
    runs-on: ubuntu-latest
    needs: [ test-server, test-sdk ]
    steps:
      - uses: actions/checkout@v4
      - name: Download sdk test results
        uses: actions/download-artifact@v3
        with:
          name: test-results-sdk
      - name: Download server test results
        uses: actions/download-artifact@v3
        with:
          name: test-results-server
      - name: Publish Unit Test Results
        uses: mikepenz/action-junit-report@v4
        if: ${{ always() }}
        with:
          report_paths: '**/test-results/**/TEST-*.xml'