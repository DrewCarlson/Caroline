name: SDK
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-sdk:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Cache Build files
        uses: actions/cache@v2
        if: ${{ !startsWith(matrix.os, 'windows') }}
        with:
          path: |
            ~/.konan
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}
      #      - uses: eskatos/gradle-command-action@v1
      #        name: Test Windows Target
      #        if: ${{ startsWith(matrix.os, 'windows') }}
      #        with:
      #          arguments: win64Test
      #      - uses: eskatos/gradle-command-action@v1
      #        name: Test Apple Targets
      #        if: ${{ startsWith(matrix.os, 'macos') }}
      #        with:
      #          arguments: macosTest # iosTest tvosTest watchosX86Test
      - uses: gradle/gradle-build-action@v2
        name: Test Linux/Jvm/Js Targets
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        with:
          arguments: jvmTest jsTest #linuxX64Test

      - name: Archive Reports
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: reports
          path: '**/build/reports/*'

      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results
          path: '**/TEST-*.xml'

  upload-kover-reports:
    runs-on: ubuntu-latest
    needs: [ test-sdk ]
    steps:
      - uses: actions/checkout@master
      - name: Download kover reports
        uses: actions/download-artifact@v3
        with:
          name: reports
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: "**/build/reports/kover/**/*.xml"

  upload-junit-results:
    runs-on: ubuntu-latest
    needs: [ test-sdk ]
    steps:
      - uses: actions/checkout@master
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results
      - name: Publish Unit Test Results
        uses: mikepenz/action-junit-report@v3
        if: ${{ always() }}
        with:
          report_paths: '**/TEST-*.xml'